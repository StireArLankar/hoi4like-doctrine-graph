{"version":3,"sources":["overmind/data.ts","overmind/state.ts","overmind/actions.ts","overmind/index.ts","components/Connections/Connections.tsx","components/Info/Info.styles.ts","components/Info/Info.tsx","components/List/Item.styles.ts","components/List/TestItem.tsx","components/List/Hoi4Item.tsx","components/List/ItemMapper.tsx","components/List/List.styles.ts","components/List/List.tsx","components/DataSelector/DataSelector.styles.ts","components/DataSelector/test-data.ts","components/DataSelector/hoi4-data.ts","components/DataSelector/DataSelector.tsx","App.tsx","index.tsx"],"names":["getTree","d","temp","filter","item","isFirst","tree","currentLayer","length","children","getChildren","arr","Array","isArray","reduce","acc","cur","newLayer","getLayer","items","push","map","childId","find","id","Boolean","every","includes","data","state","active","type","count","dragged","animating","isAnimating","increaseCount","decreaseCount","setDragged","setAnimating","stopAnimating","index","indexOf","splice","stopDragging","setData","setActive","check","newActive","forEach","activeId","selected","Object","values","parents","complete","some","parent","unshift","forkCheck","indexOfParent","oldActive","slice","i","startId","selectedDown","forkCheckDown","newActiveDown","meeting","config","actions","useOvermind","createHook","overmind","createOvermind","devtools","fix","num","toFixed","getFieldPosition","field","element","document","getElementById","x","y","rect","getBoundingClientRect","bottom","top","left","width","getPath","from","to","ofx","ofy","f1","f2","x1","y1","x4","y4","diffx","x2","y2","x3","y3","arr1","join","arr2","Connection","memo","props","wrapper","force","useState","path","setPath","loopRef","useRef","useEffect","current","offset","scrollLeft","scrollTop","window","requestAnimationFrame","loop","cancelAnimationFrame","fill","strokeWidth","strokeLinecap","stroke","Connections","setForce","ref","handler","prev","addEventListener","removeEventListener","style","position","height","pointerEvents","zIndex","child","key","makeStyles","theme","createStyles","userSelect","background","maxHeight","display","flexDirection","overflow","border","borderRadius","button","padding","marginTop","fontSize","trans","Info","classes","useStyles","isOpen","setIsOpen","useMeasure","baseHeight","wrapperRef","fullHeight","fullWidth","useSpring","tension","clamp","setH","xy","set","bind","useDrag","mx","my","filterTaps","bounds","right","innerWidth","innerHeight","rubberband","div","className","transform","interpolate","alignItems","justifyContent","flexShrink","onClick","margin","leaf","placeItems","color","transition","leafWrapper","textAlign","connector","TestItem","clsx","Hoi4Item","description","title","isDragging","onRest","down","movement","first","ItemMapper","minWidth","table","row","subtree","gridColumnGap","List","console","renderTree","gridTemplateColumns","testData1","testData2","mobileWarfare","DataSelector","App","value","ReactDOM","render"],"mappings":"ymBAkGaA,EAAU,SAACC,GA2CtB,IA1CA,IAAIC,EAAOD,EAAEE,QAAO,SAACC,GAAD,OAAWA,EAAKC,WAC9BC,EAAeL,EAAEE,QAAO,SAACC,GAAD,OAAUA,EAAKC,WAFL,aA4CtC,IAAME,EAAeD,EAAKA,EAAKE,OAAS,GAClCC,EAzCY,SAAdC,EAAeN,EAAYO,GAC/B,IAAIF,EAAqB,GAUzB,OAPEA,EADEG,MAAMC,QAAQT,GACLA,EAAKU,QAAO,SAACC,EAAKC,GAC3B,OAAON,EAAYM,EAAKD,KACvB,IAEQX,EAAKK,SAGZ,GAAN,mBAAWE,GAAX,YAAmBF,IA8BFC,CAAYH,EAAc,IACrCU,EA5BS,SAAXC,EAAYd,EAAYF,GAC5B,IAAIiB,EAAc,GAqBlB,OAlBEA,EADEP,MAAMC,QAAQT,GACRA,EAAKU,QAAO,SAACC,EAAKC,GAExB,OADAD,EAAIK,KAAKF,EAASF,EAAKd,IAChBa,IACN,IAEKX,EAAKK,SAASY,KACpB,SAACC,GAAD,OAAapB,EAAKqB,MAAK,SAACnB,GAAD,OAAUA,EAAKoB,KAAOF,SAK9CnB,OAAOsB,SACPC,OAAM,SAACtB,GAAD,OAAeA,EAAKoB,KAAQL,EAAc,GAAGK,QAGpDL,EAAQA,EAAM,IAGTA,EAMUD,CAASX,EAAcL,GAExCI,EAAKc,KAAKH,GACVf,EAAOA,EAAKC,QAAO,SAACC,GAAD,OAAWK,EAASkB,SAASvB,EAAKoB,QANhDtB,EAAKM,OAAS,GAAI,IASzB,OAAOF,GCjHHsB,EAAe,CACnB,CAAEJ,GAAI,IAAKf,SAAU,CAAC,KAAM,MAAOJ,SAAS,GAC5C,CAAEmB,GAAI,KAAMf,SAAU,CAAC,OACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAAO,QAE9B,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAAO,QAC9B,CAAEe,GAAI,MAAOf,SAAU,CAAC,OACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,OAExB,CAAEe,GAAI,MAAOf,SAAU,CAAC,QACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,QACxB,CAAEe,GAAI,KAAMf,SAAU,CAAC,OAEvB,CAAEe,GAAI,MAAOf,SAAU,CAAC,MACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,MACxB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAEvB,CAAEe,GAAI,IAAKf,SAAU,CAAC,KAAM,KAAM,OAElC,CAAEe,GAAI,KAAMf,SAAU,CAAC,MACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAEvB,CAAEe,GAAI,IAAKf,SAAU,CAAC,KAAM,KAAM,OAElC,CAAEe,GAAI,KAAMf,SAAU,CAAC,OACvB,CAAEe,GAAI,KAAMf,SAAU,IACtB,CAAEe,GAAI,KAAMf,SAAU,IAEtB,CAAEe,GAAI,KAAMf,SAAU,KAGXoB,EAAgB,CAC3BV,MAAOS,EAAKd,QAAO,SAACC,EAAKC,GAIvB,OAHAD,EAAIC,EAAIQ,IAAMR,EAAIX,QAAJ,eACLW,EADK,CACAc,QAAQ,IADR,eAELd,EAFK,CAEAc,QAAQ,IACff,IACN,IACHgB,KAAM,QACND,OAAQ,CAAC,KACTxB,KAAMN,EAAQ4B,GACdI,MAAO,EAEPC,QAAS,GACTC,UAAW,GACXC,YAAa,SAACN,GAAD,OAAWA,EAAMK,UAAU1B,OAAS,IC9EtC4B,EAAwB,SAAC,GAAc,EAAZP,MAChCG,SAGKK,EAAwB,SAAC,GAAc,EAAZR,MAChCG,SAGKM,EAA6B,SAAC,EAAWd,GAAQ,IAAjBK,EAAgB,EAAhBA,OAC1CA,EAAMI,QAAQN,SAASH,IAAOK,EAAMI,QAAQb,KAAKI,IAGvCe,EAA+B,SAAC,EAAWf,GAAQ,IAAjBK,EAAgB,EAAhBA,OAC5CA,EAAMK,UAAUP,SAASH,IAAOK,EAAMK,UAAUd,KAAKI,IAG3CgB,EAAgC,SAAC,EAAWhB,GAAQ,IAAjBK,EAAgB,EAAhBA,MACxCY,EAAQZ,EAAMK,UAAUQ,QAAQlB,GAClCiB,GAAS,GACXZ,EAAMK,UAAUS,OAAOF,EAAO,IAIrBG,EAA+B,SAAC,EAAWpB,GAAQ,IAAjBK,EAAgB,EAAhBA,MACvCY,EAAQZ,EAAMI,QAAQS,QAAQlB,GAChCiB,GAAS,GACXZ,EAAMI,QAAQU,OAAOF,EAAO,IASnBI,EAAgC,SAAC,EAAD,GAAgC,IAA7BhB,EAA4B,EAA5BA,MAAWD,EAAiB,EAAjBA,KAAMG,EAAW,EAAXA,KAC3DF,EAAME,OAASA,IAInBF,EAAMV,MAAQS,EAAKd,QAAO,SAACC,EAAKC,GAO9B,OANIA,EAAIX,SACNwB,EAAMC,OAAS,CAACd,EAAIQ,IACpBT,EAAIC,EAAIQ,IAAR,eAAmBR,EAAnB,CAAwBc,QAAQ,KAEhCf,EAAIC,EAAIQ,IAAR,eAAmBR,EAAnB,CAAwBc,QAAQ,IAE3Bf,IACN,IAEHc,EAAMvB,KAAON,EAAQ4B,GAErBC,EAAME,KAAOA,EAEbF,EAAMK,UAAY,GAClBL,EAAMI,QAAU,KAGLa,EAA4B,SAAC,EAAWtB,GAAQ,IAAjBK,EAAgB,EAAhBA,MAC1C,GAAIA,EAAMC,OAAOD,EAAMC,OAAOtB,OAAS,KAAOgB,EAA9C,CAKA,GAAIK,EAAMC,OAAOH,SAASH,GAAK,CAC7B,IAAIuB,GAAQ,EACNC,EAAsB,GAmB5B,OAhBAnB,EAAMC,OAAOmB,SAAQ,SAACC,GAGpBrB,EAAMV,MAAM+B,GAAUpB,SAAWiB,IAC9BlB,EAAMV,MAAM+B,GAAUpB,OAASiB,GAGlCA,GAASC,EAAU5B,KAAK8B,GAGpBA,IAAa1B,IACfuB,GAAQ,WAIZlB,EAAMC,OAASkB,GAKhB,IAAD,aA0BE,IAxBA,IAAIG,EAAWtB,EAAMV,MAAMK,GAErBL,EAAQiC,OAAOC,OAAOxB,EAAMV,OAE9BmC,EAAUnC,EAAMhB,QAAO,SAACC,GAAD,OAAUA,EAAKK,SAASkB,SAASwB,EAAS3B,OAEjEwB,EAAsB,CAACxB,GAGvB+B,EAAWD,EAAQE,MAAK,SAACC,GAG3B,QAFuB5B,EAAMC,OAAOH,SAAS8B,EAAOjC,MAGlDwB,EAAUU,QAAQD,EAAOjC,KAClB,MAOPmC,EAA+B,IAAnBL,EAAQ9C,OAGjBmD,IAAcJ,GAEnBJ,EAAWtB,EAAMV,MAAMmC,EAAQ,GAAG9B,IAElCwB,EAAUU,QAAQP,EAAS3B,IAK3B+B,GAHAD,EAAUnC,EAAMhB,QAAO,SAACC,GAAD,OAAUA,EAAKK,SAASkB,SAASwB,EAAS3B,QAG9CgC,MAAK,SAACC,GAEvB,QADuB5B,EAAMC,OAAOH,SAAS8B,EAAOjC,MAElDwB,EAAUU,QAAQD,EAAOjC,KAClB,MAOXmC,EAA+B,IAAnBL,EAAQ9C,OAItB,GAAI+C,EAAU,CAKZ,IAHA,IAAMK,EAAgB/B,EAAMC,OAAOY,QAAQM,EAAU,IAC/Ca,EAAS,YAAOhC,EAAMC,OAAOgC,MAAM,EAAGF,IAEnCG,EAAIH,EAAgB,EAAGG,EAAIlC,EAAMC,OAAOtB,OAAQuD,IACvDlC,EAAMV,MAAMU,EAAMC,OAAOiC,IAAIjC,QAAS,EAUxC,OANAkB,EAAUC,SAAQ,SAACzB,IACU,IAA3BK,EAAMV,MAAMK,GAAIM,SAAoBD,EAAMV,MAAMK,GAAIM,QAAS,MAI/DD,EAAMC,OAAN,sBAAmB+B,GAAcb,GAC3B,CAAN,UAgBF,IAXA,IAAMgB,EAAUnC,EAAMC,OAAOD,EAAMC,OAAOtB,OAAS,GAC/CyD,EAAepC,EAAMV,MAAM6C,GAE3BE,EAAiD,IAAjCD,EAAaxD,SAASD,OAEpC2D,EAAuB,YAAOtC,EAAMC,QAGtCsC,GAAU,EAGPF,IAAkBE,GAEvBH,EAAepC,EAAMV,MAAM8C,EAAaxD,SAAS,IAEjD0D,EAAc/C,KAAK6C,EAAazC,IAEhC0C,EAAiD,IAAjCD,EAAaxD,SAASD,OAGlCyD,EAAaxD,SAASkB,SAASwB,EAAS3B,MAE1C4C,GAAU,GAId,GAAIA,EAAS,CAIX,IAFA,IAESL,EAFalC,EAAMC,OAAOY,QAAQsB,GAEd,EAAGD,EAAII,EAAc3D,OAAQuD,IACxDlC,EAAMV,MAAMgD,EAAcJ,IAAIjC,QAAS,EAQzC,OAJAkB,EAAUC,SAAQ,SAACzB,GAAD,OAASK,EAAMV,MAAMK,GAAIM,QAAS,KAGpDD,EAAMC,OAAN,sBAAmBqC,GAAkBnB,GAC/B,CAAN,WA9GJ,0CCrFIqB,EAAS,CACbxC,QACAyC,WAGWC,EAAcC,cAEdC,EAAWC,YAAeL,EAAQ,CAAEM,UAAU,I,OCZrDC,EAAM,SAACC,GAAD,OAAiBA,EAAIC,QAAQ,IAInCC,EAAmB,SACvBC,EACAvB,GAEA,IAAMwB,EAAUC,SAASC,eAAT,UAA2BH,IAE3C,IAAKC,EACH,MAAO,CAAEG,EAAG,EAAGC,EAAG,GAGpB,IAAMC,EAAOL,EAAQM,wBAOrB,MALW,CACTF,EAAG5B,EAAS6B,EAAKE,OAASF,EAAKG,IAC/BL,EAAGE,EAAKI,KAAOJ,EAAKK,MAAQ,IAM1BC,EAAU,SAACC,EAAcC,EAAYC,EAAaC,GACtD,IAAMC,EAAKlB,EAAiBc,GAAM,GAC5BK,EAAKnB,EAAiBe,GAEtBK,EAAKF,EAAGb,EAAIW,EACZK,EAAKH,EAAGZ,EAAIW,EACZK,EAAKH,EAAGd,EAAIW,EACZO,EAAKJ,EAAGb,EAAIW,EAElB,GAAIG,EAAK,GAAKE,EAAK,EACjB,MAAO,GAGT,IAAME,EAA8BF,EAAJF,EAE1BK,EAAKL,EAAa,GAARI,EACVE,EAAKL,EAAK,EACVM,EAAKL,EAAa,GAARE,EACVI,EAAKL,EAAK,EACVM,EAAO,CAAChC,EAAIuB,GAAKvB,EAAIwB,IAAKS,KAAK,MAC/BC,EAAO,CAACN,EAAIC,EAAIC,EAAIC,EAAI/B,EAAIyB,GAAKzB,EAAI+B,IAAKE,KAAK,MAErD,MAAM,IAAN,OAAWD,EAAX,cAAqBhC,EAAI6B,GAAzB,cAAkCK,EAAlC,cAA4ClC,EAAI0B,KAYrCS,EAAaC,gBAAK,SAACC,GAA4B,IAClDpB,EAAsCoB,EAAtCpB,KAAMC,EAAgCmB,EAAhCnB,GAAIoB,EAA4BD,EAA5BC,QAASjF,EAAmBgF,EAAnBhF,QAASkF,EAAUF,EAAVE,MADqB,EAEjCC,mBAAS,IAFwB,mBAElDC,EAFkD,KAE5CC,EAF4C,KAInDC,EAAUC,iBAAO,GAqCvB,OAnCAC,qBAAU,WACR,IAAKP,EAAQQ,QACX,OAAOJ,EAAQ,IAGjB,IAAMK,EAAST,EAAQQ,QAAQnC,wBAEzBQ,EAAMmB,EAAQQ,QAAQE,WAAaD,EAAOjC,KAE1CM,EAAMkB,EAAQQ,QAAQG,UAAYF,EAAOlC,IAI/C,GAFA6B,EAAQ1B,EAAQC,EAAMC,EAAIC,EAAKC,IAE3B/D,EAAS,CAeXsF,EAAQG,QAAUI,OAAOC,uBAdZ,SAAPC,IACJ,GAAId,EAAQQ,QAAS,CACnB,IAAMC,EAAST,EAAQQ,QAAQnC,wBAEzBQ,EAAMmB,EAAQQ,QAAQE,WAAaD,EAAOjC,KAE1CM,EAAMkB,EAAQQ,QAAQG,UAAYF,EAAOlC,IAE/C6B,EAAQ1B,EAAQC,EAAMC,EAAIC,EAAKC,IAGjCuB,EAAQG,QAAUI,OAAOC,sBAAsBC,WAKjDF,OAAOG,qBAAqBV,EAAQG,SACpCH,EAAQG,QAAU,IAEnB,CAAC7B,EAAMC,EAAI7D,EAASiF,EAASC,IAG9B,0BACEe,KAAK,OACLC,YAAY,IACZC,cAAc,QACdC,OAAO,QACPpI,EAAGoH,OAKIiB,EAActB,gBAAK,WAAO,IAAD,EACVI,mBAAS,GADC,mBAC7BD,EAD6B,KACtBoB,EADsB,OAKhChE,IADF1C,MAASV,EAJyB,EAIzBA,MAAOc,EAJkB,EAIlBA,QAASE,EAJS,EAITA,YAGrBqG,EAAMhB,iBAAsB,MAElCC,qBAAU,WACRc,EAAS,GACT,IAAME,EAAU,kBAAMF,GAAS,SAACG,GAAD,OAAUA,EAAO,MAGhD,OADAZ,OAAOa,iBAAiB,SAAUF,GAC3B,kBAAMX,OAAOc,oBAAoB,SAAUH,MACjD,IAkBH,OACE,yBACEI,MAAO,CACLC,SAAU,WACVnD,MAAO,OACPoD,OAAQ,OACRtD,IAAK,EACLC,KAAM,EACNsD,cAAe,OACfC,QAAS,GAEXT,IAAKA,GA1BPpF,OAAOC,OAAOlC,GAAOE,KAAI,SAACjB,GAAD,OACvBA,EAAKK,SAASY,KAAI,SAAC6H,GAAD,OAChB,kBAACnC,EAAD,CACEoC,IAAKD,EACLrD,KAAMzF,EAAKoB,GACXsE,GAAIoD,EACJhC,QAASsB,EACTrB,MAAOA,EACPlF,QACEE,GAAeF,EAAQN,SAASvB,EAAKoB,KAAOS,EAAQN,SAASuH,e,0DCzI1DE,OAAW,SAACC,GAAD,OACxBC,IAAa,CACXpC,QAAS,CACP4B,SAAU,QACVrD,IAAK,EACLC,KAAM,EACN6D,WAAY,OACZC,WAAY,eACZC,UAAW,qBACXC,QAAS,OACTC,cAAe,SACfC,SAAU,OACVC,OAAQ,+BACRC,aAAc,IAEhBhI,OAAQ,GACRiI,OAAQ,CACNC,QAAS,WACTC,UAAW,EACXC,SAAU,GACVV,WAAY,OACZD,WAAY,aChBZY,EAAQ,SAAC/E,EAAWC,GAAZ,4BAAyCD,EAAzC,eAAiDC,EAAjD,WAED+E,EAAO,WAAO,IAAD,EAGpB7F,IADF1C,MAASC,EAFa,EAEbA,OAAQX,EAFK,EAELA,MAGbkJ,EAAUC,IALQ,EAOIlD,oBAAS,GAPb,mBAOjBmD,EAPiB,KAOTC,EAPS,OAScC,cATd,mBASjBjC,EATiB,KASFkC,EATE,KASV3B,OATU,EAUuC0B,cAVvC,mBAUjBE,EAViB,YAUKC,EAVL,EAUH7B,OAA2B8B,EAVxB,EAUiBlF,MAVjB,EAYGmF,aAAU,iBAAO,CAC1C/B,OAAQ,EACR1E,OAAQ,CACN0G,QAAS,IACTC,OAAO,OAhBa,mBAYfjC,EAZe,KAYfA,OAAUkC,EAZK,KAoBxBxD,qBAAU,WACRwD,EAAK,CAAElC,OAAQwB,EAASG,EAAa,MACpC,CAACH,EAAQU,EAAMP,IAElB,IAxBwB,EA0BFI,aAAU,iBAAO,CACrCI,GAAI,CAAC,GAAI,QA3Ba,mBA0BfA,EA1Be,KA0BfA,GAAMC,EA1BS,KA8BlBC,EAAOC,aACX,YAA2B,IAAD,gBAAvB1D,OAAuB,GAAd2D,EAAc,KAAVC,EAAU,KACxBJ,EAAI,CAAED,GAAI,CAACI,EAAIC,OAEjB,CACEC,YAAY,EACZC,OAAQ,CACN/F,KAAM,GACND,IAAK,GACLiG,MAAO5D,OAAO6D,WAAad,EAAY,GACvCrF,OAAQsC,OAAO8D,YAAchB,EAAa,IAE5CiB,WAAY,KAIhB,OACE,kBAAC,IAASC,IAAV,CACEC,UAAW1B,EAAQnD,QACnB2B,MAAO,CAAEmD,UAAWd,EAAGe,YAAY9B,IACnC3B,IAAKmC,GAEL,yBACE9B,MAAO,CACLa,QAAS,OACTC,cAAe,SACfuC,WAAY,SACZC,eAAgB,SAChBnC,QAAS,GACToC,WAAY,IAPhB,OAWE,uCAAKL,UAAW1B,EAAQN,QAAYqB,KAApC,QAGA,yBAAKW,UAAW1B,EAAQN,OAAQsC,QA1CvB,kBAAM7B,GAAU,SAAC9B,GAAD,OAAWA,OA0CpC,WAIF,kBAAC,IAASoD,IAAV,CAAcjD,MAAO,CAAEE,SAAQa,SAAU,SAAUwC,WAAY,IAC7D,wBAAI5D,IAAKA,EAAKK,MAAO,CAAEmB,QAAS,GAAIsC,OAAQ,IACzCxK,EAAOT,KAAI,SAACjB,GAAD,OACV,wBAAI+I,IAAKhI,EAAMf,GAAMoB,IAAKL,EAAMf,GAAMoB,W,QChFnC4H,OAAW,SAACC,GAAD,OACxBC,IAAa,CACXxH,OAAQ,GACRyK,KAAM,CACJxD,OAAQ,IACRpD,MAAO,IACP2G,OAAO,YACP5C,QAAS,OACT8C,WAAY,SACZC,MAAO,QACP3D,SAAU,WAEVU,WAAY,QACZkD,WAAY,uBACZ,WAAY,CACVlD,WAAY,aAGhBmD,YAAa,CACX7D,SAAU,WACVnD,MAAO,OACP+D,QAAS,OACTC,cAAe,SACfuC,WAAY,SACZC,eAAgB,eAChBS,UAAW,UAEbnH,IAAK,GACLD,OAAQ,GACRqH,UAAW,CACTnH,KAAM,MACNoD,SAAU,WACV,QAAS,CACPrD,IAAK,GAEP,WAAY,CACVD,OAAQ,IAGZuE,OAAQ,CACNC,QAAS,WACTC,UAAW,EACXC,SAAU,GACVV,WAAY,OACZD,WAAY,aCrCLuD,EAAW9F,gBAAK,YAAoB,IAAjBxF,EAAgB,EAAhBA,GACxB6I,EAAUC,IAD8B,EAGnB/F,IAAnB1C,EAHsC,EAGtCA,MAAOyC,EAH+B,EAG/BA,QAETlE,EAAOyB,EAAMV,MAAMK,GAEjBf,EAA8BL,EAA9BK,SAAUJ,EAAoBD,EAApBC,QAASyB,EAAW1B,EAAX0B,OAIrBiK,EAAYgB,YAAK1C,EAAQkC,KAAMzK,GAAUuI,EAAQvI,QAavD,OACE,yBAAKiK,UAAW1B,EAAQsC,aACtB,yBAAKZ,UAAWA,EAAWvK,GAAIA,EAAI6K,QAjBvB,kBAAM/H,EAAQxB,UAAUtB,MAkBhCnB,GAbN,0BAAMmB,GAAE,UAAKA,EAAL,QAAeuK,UAAWgB,YAAK1C,EAAQwC,UAAWxC,EAAQ5E,OAc7DjE,EACAf,EAASD,OAAS,GAXvB,0BACEgB,GAAE,UAAKA,EAAL,WACFuK,UAAWgB,YAAK1C,EAAQwC,UAAWxC,EAAQ7E,eCpB3C2E,EAAQ,SAAC/E,EAAWC,GAAZ,4BAAyCD,EAAzC,eAAiDC,EAAjD,WAED2H,EAAW,SAAC,GAA4B,IAA1BxL,EAAyB,EAAzBA,GACnB6I,EAAUC,IADkC,EAGtBlD,oBAAS,GAHa,mBAG3CmD,EAH2C,KAGnCC,EAHmC,OAKvBjG,IAAnB1C,EAL0C,EAK1CA,MAAOyC,EALmC,EAKnCA,QALmC,EAOrCzC,EAAMV,MAAMK,GAEjBM,EAT0C,EAS1CA,OAAQmL,EATkC,EASlCA,YAAaC,EATqB,EASrBA,MATqB,EAWZzC,cAXY,mBAW3CjC,EAX2C,KAW5BkC,EAX4B,KAWpC3B,OAIRgD,EAAYgB,YAAK1C,EAAQkC,KAAMzK,GAAUuI,EAAQvI,QAEjDqL,EAAa3F,kBAAO,GAjBwB,EAmBvBsD,aAAU,iBAAO,CAC1C/B,OAAQ,EACR1E,OAAQ,CACN0G,QAAS,IACTC,OAAO,GAEToC,OAAQ,WACN9I,EAAQ9B,cAAchB,QA1BwB,mBAmBzCuH,EAnByC,KAmBzCA,OAAUkC,EAnB+B,KA8BlDxD,qBAAU,WACRwD,EAAK,CAAElC,OAAQwB,EAASG,EAAa,MACpC,CAACH,EAAQU,EAAMP,IAElB,IAlCkD,EAuC5BI,aAAU,iBAAO,CACrCI,GAAI,CAAC,EAAG,GACRkC,OAAQ,YACLD,EAAWzF,SAAWpD,EAAQ1B,aAAapB,QA1CE,mBAuCzC0J,EAvCyC,KAuCzCA,GAAMC,EAvCmC,KA8ClD1D,qBAAU,WACR,OAAO,WACLnD,EAAQ1B,aAAapB,GACrB8C,EAAQ9B,cAAchB,MAEvB,CAAC8C,EAAS9C,IAEb,IAAM4J,EAAOC,aACX,YAA0C,IAAvCgC,EAAsC,EAAtCA,KAAsC,gBAAhCC,SAAgC,GAArBhC,EAAqB,KAAjBC,EAAiB,OAAZgC,OAEzBjJ,EAAQhC,WAAWd,GAGrB2L,EAAWzF,QAAU2F,EACrBlC,EAAI,CAAED,GAAImC,EAAO,CAAC/B,EAAIC,GAAM,CAAC,EAAG,OAElC,CAAEC,YAAY,IAGhB,OACE,yBAAKO,UAAW1B,EAAQsC,aACtB,kBAAC,IAASb,IAAV,CACEC,UAAWA,EACXvK,GAAIA,EACJqH,MAAO,CACLmD,UAAWd,EAAGe,YAAY9B,GAC1BpB,OAAQ,SAGV,yBACEF,MAAO,CACLa,QAAS,OACTC,cAAe,SACfuC,WAAY,SACZC,eAAgB,SAChBpD,OAAQ,MAGTmE,EACD,uCAAKnB,UAAW1B,EAAQN,QAAYqB,KAApC,QAGA,yBAAKW,UAAW1B,EAAQN,OAAQsC,QA3ExB,kBAAM/H,EAAQxB,UAAUtB,KA2EhC,UAGA,yBAAKuK,UAAW1B,EAAQN,OAAQsC,QAzDzB,WACb7B,GAAU,SAAC9B,GAAD,OAAWA,KACrBpE,EAAQ/B,aAAaf,KAuDf,WAIF,kBAAC,IAASsK,IAAV,CAAcjD,MAAO,CAAEE,SAAQa,SAAU,WACvC,yBAAKpB,IAAKA,EAAKK,MAAO,CAAEmB,QAAS,KAC9BiD,OCvGAO,EAAaxG,gBAAK,YAA6B,IAA1BxF,EAAyB,EAAzBA,GAKhC,OAJkB+C,IAAV1C,MAEeV,MAAMK,GAArBO,MAGN,IAAK,OACH,OAAO,kBAAC,EAAD,CAAUP,GAAIA,IACvB,QACE,OAAO,kBAACsL,EAAD,CAAUtL,GAAIA,QCZZ4H,OAAW,SAACC,GAAD,OACxBC,IAAa,CACXpC,QAAS,CACPwC,QAAS,OACTC,cAAe,SACfuC,WAAY,SACZuB,SAAU,cACV3E,SAAU,YAEZ4E,MAAO,GACPC,IAAK,CACHjE,QAAS,OACTZ,SAAU,YAEZ8E,QAAS,CACPlE,QAAS,OACTmE,cAAe,GACfrB,WAAY,SACZ1D,SAAU,iBCbHgF,EAAO9G,gBAAK,WAAO,IAEnB1G,EACPiE,IADF1C,MAASvB,KAGXyN,QAAQ/L,MAAM,QAEd,IAAMqI,EAAUC,IA4BhB,OACE,yBAAKyB,UAAW1B,EAAQnD,SAVxB,yBAAK6E,UAAW1B,EAAQqD,OACrBpN,EAAKe,KAAI,SAACkL,EAAM9J,GAAP,OACR,yBAAK0G,IAAK1G,EAAOsJ,UAAW1B,EAAQsD,KAnBvB,SAAbK,EAAc1N,GAClB,OAAIM,MAAMC,QAAQP,GAEd,yBACE6I,IAAI,QACJ4C,UAAW1B,EAAQuD,QACnB/E,MAAO,CAAEoF,oBAAoB,UAAD,OAAY3N,EAAKE,OAAjB,YAE3BF,EAAKe,IAAI2M,IAKT,kBAACR,EAAD,CAAYhM,GAAIlB,EAAKkB,GAAI2H,IAAK7I,EAAKkB,KAOnCwM,CAAWzB,QAShB,kBAACjE,EAAD,MACA,kBAAC,EAAD,UC5CSc,OAAW,SAACC,GAAD,OACxBC,IAAa,CACXpC,QAAS,CACPzB,IAAK,QCLEyI,EAAyB,CACpC,CAAE1M,GAAI,IAAKf,SAAU,CAAC,KAAM,MAAOJ,SAAS,GAC5C,CAAEmB,GAAI,KAAMf,SAAU,CAAC,OACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAAO,QAE9B,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAAO,QAC9B,CAAEe,GAAI,MAAOf,SAAU,CAAC,OACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,OAExB,CAAEe,GAAI,MAAOf,SAAU,CAAC,QACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,QACxB,CAAEe,GAAI,KAAMf,SAAU,CAAC,OAEvB,CAAEe,GAAI,MAAOf,SAAU,CAAC,MACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,MACxB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAEvB,CAAEe,GAAI,IAAKf,SAAU,CAAC,KAAM,KAAM,OAElC,CAAEe,GAAI,KAAMf,SAAU,CAAC,MACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAEvB,CAAEe,GAAI,IAAKf,SAAU,CAAC,KAAM,KAAM,OAElC,CAAEe,GAAI,KAAMf,SAAU,CAAC,OACvB,CAAEe,GAAI,KAAMf,SAAU,IACtB,CAAEe,GAAI,KAAMf,SAAU,IAEtB,CAAEe,GAAI,KAAMf,SAAU,KAGX0N,EAAyB,CACpC,CAAE3M,GAAI,IAAKf,SAAU,CAAC,KAAM,MAAOJ,SAAS,GAC5C,CAAEmB,GAAI,KAAMf,SAAU,CAAC,OACvB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAAO,QAE9B,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAAO,QAC9B,CAAEe,GAAI,MAAOf,SAAU,CAAC,OACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,OAExB,CAAEe,GAAI,MAAOf,SAAU,CAAC,QACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,QACxB,CAAEe,GAAI,KAAMf,SAAU,CAAC,OAEvB,CAAEe,GAAI,MAAOf,SAAU,CAAC,MACxB,CAAEe,GAAI,MAAOf,SAAU,CAAC,MACxB,CAAEe,GAAI,KAAMf,SAAU,CAAC,MAEvB,CAAEe,GAAI,IAAKf,SAAU,KCjDV2N,EAA6B,CACxC,CACErM,KAAM,OACNP,GAAI,IACJf,SAAU,CAAC,KACXJ,SAAS,EACT6M,MAAM,iBACND,YAAY,4FAGd,CACElL,KAAM,OACNP,GAAI,IACJf,SAAU,CAAC,KACXyM,MAAM,QACND,YAAY,yIAGd,CACElL,KAAM,OACNP,GAAI,IACJf,SAAU,CAAC,KAAM,MACjByM,MAAM,kBACND,YAAY,kOAGd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,MACXyM,MAAM,kBACND,YAAY,6NAEd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,MACXyM,MAAM,oBACND,YAAY,sLAGd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,MACXyM,MAAM,oBACND,YAAY,8CAEd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,MACXyM,MAAM,cACND,YAAY,4HAGd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,KACXyM,MAAM,uBACND,YAAY,0KAEd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,KACXyM,MAAM,aACND,YAAY,+KAGd,CACElL,KAAM,OACNP,GAAI,IACJf,SAAU,CAAC,KAAM,MACjByM,MAAM,cACND,YAAY,2FAGd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,MACXyM,MAAM,aACND,YAAY,uIAEd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,MACXyM,MAAM,gBACND,YAAY,2HAGd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,OACXyM,MAAM,kCACND,YAAY,yFAEd,CACElL,KAAM,OACNP,GAAI,KACJf,SAAU,CAAC,OACXyM,MAAM,gBACND,YAAY,kMAGd,CACElL,KAAM,OACNP,GAAI,MACJf,SAAU,GACVyM,MAAM,qBACND,YAAY,gIAEd,CACElL,KAAM,OACNP,GAAI,MACJf,SAAU,GACVyM,MAAM,oBACND,YAAY,0JCnHHoB,GAAerH,gBAAK,WAAO,IAC9B1C,EAAYC,IAAZD,QAEF+F,EAAUC,IAMhB,OAJA7C,qBAAU,WACRnD,EAAQzB,QAAQ,CAAEjB,KAAMwM,EAAerM,KAAM,qBAC5C,CAACuC,IAGF,yBAAKyH,UAAW1B,EAAQnD,SACtB,4BACEmF,QAAS,kBACP/H,EAAQzB,QAAQ,CAAEjB,KAAMwM,EAAerM,KAAM,qBAFjD,kBAQA,4BACEsK,QAAS,kBAAM/H,EAAQzB,QAAQ,CAAEjB,KAAMsM,EAAWnM,KAAM,YAD1D,gBAMA,4BACEsK,QAAS,kBAAM/H,EAAQzB,QAAQ,CAAEjB,KAAMuM,EAAWpM,KAAM,YAD1D,oBCnBSuM,GAPH,kBACV,kBAAC,IAAD,CAAUC,MAAO9J,GACf,kBAAC4J,GAAD,MACA,kBAACP,EAAD,QCLJU,IAASC,OAAO,kBAAC,GAAD,MAASvJ,SAASC,eAAe,W","file":"static/js/main.53913c7e.chunk.js","sourcesContent":["export type Test = ItemModel | Test[]\r\n\r\ninterface ItemModel {\r\n  id: string\r\n  children: string[]\r\n  isFirst?: boolean\r\n}\r\n\r\n// const data = [\r\n//   { id: '1', children: ['2a', '2b'], isFirst: true },\r\n\r\n//   { id: '2a', children: ['3a'] },\r\n//   { id: '2b', children: ['3ba', '3bb'] },\r\n\r\n//   { id: '3a', children: ['4aa', '4ab'] },\r\n//   { id: '3ba', children: ['4b'] },\r\n//   { id: '3bb', children: ['4b'] },\r\n\r\n//   { id: '4aa', children: ['5aa'] },\r\n//   { id: '4ab', children: ['5ab'] },\r\n//   { id: '4b', children: ['5b'] },\r\n\r\n//   { id: '5aa', children: ['6'] },\r\n//   { id: '5ab', children: ['6'] },\r\n//   { id: '5b', children: ['6'] },\r\n\r\n//   { id: '6', children: ['7a', '7b', '7c'] },\r\n\r\n//   { id: '7a', children: ['8'] },\r\n//   { id: '7b', children: ['8'] },\r\n//   { id: '7c', children: ['8'] },\r\n\r\n//   { id: '8', children: ['9a', '9b', '9c'] },\r\n\r\n//   { id: '9a', children: ['10'] },\r\n//   { id: '9b', children: [] },\r\n//   { id: '9c', children: [] },\r\n\r\n//   { id: '10', children: [] },\r\n// ]\r\n\r\n// let temp = data.filter((item) => !item.isFirst)\r\n// export const tree: Test[] = data.filter((item) => item.isFirst)\r\n\r\n// const getChildren = (item: Test, arr: string[]) => {\r\n//   let children: string[] = []\r\n\r\n//   if (Array.isArray(item)) {\r\n//     children = item.reduce((acc, cur) => {\r\n//       return getChildren(cur, acc)\r\n//     }, [] as string[])\r\n//   } else {\r\n//     children = item.children\r\n//   }\r\n\r\n//   return [...arr, ...children]\r\n// }\r\n\r\n// const getLayer = (item: Test): Test => {\r\n//   let items: Test = []\r\n\r\n//   if (Array.isArray(item)) {\r\n//     items = item.reduce((acc, cur) => {\r\n//       acc.push(getLayer(cur))\r\n//       return acc\r\n//     }, [] as any[])\r\n//   } else {\r\n//     items = item.children.map(\r\n//       (childId) => temp.find((item) => item.id === childId) as ItemModel\r\n//     )\r\n//   }\r\n\r\n//   const check = items\r\n//     .filter(Boolean)\r\n//     .every((item: any) => item.id === (items as any)[0].id)\r\n\r\n//   if (check) {\r\n//     items = items[0]\r\n//   }\r\n\r\n//   return items\r\n// }\r\n\r\n// while (temp.length > 0) {\r\n//   const currentLayer = tree[tree.length - 1]\r\n//   const children = getChildren(currentLayer, [])\r\n//   const newLayer = getLayer(currentLayer)\r\n\r\n//   tree.push(newLayer)\r\n//   temp = temp.filter((item) => !children.includes(item.id))\r\n// }\r\n\r\ntype GetTreeArg = {\r\n  id: string\r\n  children: string[]\r\n  isFirst?: boolean\r\n}[]\r\n\r\nexport const getTree = (d: GetTreeArg) => {\r\n  let temp = d.filter((item) => !item.isFirst)\r\n  const tree: Test[] = d.filter((item) => item.isFirst)\r\n\r\n  const getChildren = (item: Test, arr: string[]) => {\r\n    let children: string[] = []\r\n\r\n    if (Array.isArray(item)) {\r\n      children = item.reduce((acc, cur) => {\r\n        return getChildren(cur, acc)\r\n      }, [] as string[])\r\n    } else {\r\n      children = item.children\r\n    }\r\n\r\n    return [...arr, ...children]\r\n  }\r\n\r\n  const getLayer = (item: Test, temp: ItemModel[]): Test => {\r\n    let items: Test = []\r\n\r\n    if (Array.isArray(item)) {\r\n      items = item.reduce((acc, cur) => {\r\n        acc.push(getLayer(cur, temp))\r\n        return acc\r\n      }, [] as any[])\r\n    } else {\r\n      items = item.children.map(\r\n        (childId) => temp.find((item) => item.id === childId) as ItemModel\r\n      )\r\n    }\r\n\r\n    const check = items\r\n      .filter(Boolean)\r\n      .every((item: any) => item.id === (items as any)[0].id)\r\n\r\n    if (check) {\r\n      items = items[0]\r\n    }\r\n\r\n    return items\r\n  }\r\n\r\n  while (temp.length > 0) {\r\n    const currentLayer = tree[tree.length - 1]\r\n    const children = getChildren(currentLayer, [])\r\n    const newLayer = getLayer(currentLayer, temp)\r\n\r\n    tree.push(newLayer)\r\n    temp = temp.filter((item) => !children.includes(item.id))\r\n  }\r\n\r\n  return tree\r\n}\r\n\r\n// export const tree: Test[] = []\r\n\r\n// tree.push({ id: '1', children: ['2a', '2b'] })\r\n\r\n// tree.push([\r\n//   { id: '2a', children: ['3a'] },\r\n//   { id: '2b', children: ['3ba', '3bb'] },\r\n// ])\r\n\r\n// tree.push([\r\n//   { id: '3a', children: ['4aa', '4ab'] },\r\n//   [\r\n//     { id: '3ba', children: ['4b'] },\r\n//     { id: '3bb', children: ['4b'] },\r\n//   ],\r\n// ])\r\n\r\n// tree.push([\r\n//   [\r\n//     { id: '4aa', children: ['5aa'] },\r\n//     { id: '4ab', children: ['5ab'] },\r\n//   ],\r\n//   { id: '4b', children: ['5b'] },\r\n// ])\r\n\r\n// tree.push([\r\n//   [\r\n//     { id: '5aa', children: ['6'] },\r\n//     { id: '5ab', children: ['6'] },\r\n//   ],\r\n//   { id: '5b', children: ['6'] },\r\n// ])\r\n\r\n// tree.push({ id: '6', children: ['7a', '7b', '7c'] })\r\n\r\n// tree.push([\r\n//   { id: '7a', children: ['8'] },\r\n//   { id: '7b', children: ['8'] },\r\n//   { id: '7c', children: ['8'] },\r\n// ])\r\n\r\n// tree.push({ id: '8', children: ['9a', '9b', '9c'] })\r\n\r\n// tree.push([\r\n//   { id: '9a', children: ['10'] },\r\n//   { id: '9b', children: [] },\r\n//   { id: '9c', children: [] },\r\n// ])\r\n\r\n// tree.push({ id: '10', children: [] })\r\n","import { Derive } from 'overmind'\r\n\r\nimport { getTree } from './data'\r\n\r\nexport type Item = {\r\n  id: string\r\n  children: string[]\r\n  isFirst?: boolean\r\n  active?: boolean\r\n}\r\n\r\nexport interface IHoi4Item extends Item {\r\n  type: 'hoi4'\r\n  title: string\r\n  description: string\r\n}\r\n\r\nexport interface ITestItem extends Item {\r\n  type?: undefined\r\n}\r\n\r\nexport type StateItem = IHoi4Item | ITestItem\r\n\r\nexport type Tree = Item | Tree[]\r\n\r\nexport type IState = {\r\n  items: Record<string, StateItem>\r\n  type: string\r\n  active: string[]\r\n  tree: Tree[]\r\n  count: number\r\n\r\n  dragged: string[]\r\n  animating: string[]\r\n  isAnimating: Derive<IState, boolean>\r\n}\r\n\r\nconst data: Item[] = [\r\n  { id: '1', children: ['2a', '2b'], isFirst: true },\r\n  { id: '2a', children: ['3a'] },\r\n  { id: '2b', children: ['3ba', '3bb'] },\r\n\r\n  { id: '3a', children: ['4aa', '4ab'] },\r\n  { id: '3ba', children: ['4b'] },\r\n  { id: '3bb', children: ['4b'] },\r\n\r\n  { id: '4aa', children: ['5aa'] },\r\n  { id: '4ab', children: ['5ab'] },\r\n  { id: '4b', children: ['5b'] },\r\n\r\n  { id: '5aa', children: ['6'] },\r\n  { id: '5ab', children: ['6'] },\r\n  { id: '5b', children: ['6'] },\r\n\r\n  { id: '6', children: ['7a', '7b', '7c'] },\r\n\r\n  { id: '7a', children: ['8'] },\r\n  { id: '7b', children: ['8'] },\r\n  { id: '7c', children: ['8'] },\r\n\r\n  { id: '8', children: ['9a', '9b', '9c'] },\r\n\r\n  { id: '9a', children: ['10'] },\r\n  { id: '9b', children: [] },\r\n  { id: '9c', children: [] },\r\n\r\n  { id: '10', children: [] },\r\n]\r\n\r\nexport const state: IState = {\r\n  items: data.reduce((acc, cur) => {\r\n    acc[cur.id] = cur.isFirst\r\n      ? { ...cur, active: true }\r\n      : { ...cur, active: false }\r\n    return acc\r\n  }, {} as Record<string, StateItem>),\r\n  type: 'test1',\r\n  active: ['1'],\r\n  tree: getTree(data),\r\n  count: 0,\r\n\r\n  dragged: [],\r\n  animating: [],\r\n  isAnimating: (state) => state.animating.length > 0,\r\n}\r\n","import { Action } from 'overmind'\r\n\r\nimport { Item, StateItem } from './state'\r\nimport { getTree } from './data'\r\n\r\nexport const increaseCount: Action = ({ state }) => {\r\n  state.count++\r\n}\r\n\r\nexport const decreaseCount: Action = ({ state }) => {\r\n  state.count--\r\n}\r\n\r\nexport const setDragged: Action<string> = ({ state }, id) => {\r\n  !state.dragged.includes(id) && state.dragged.push(id)\r\n}\r\n\r\nexport const setAnimating: Action<string> = ({ state }, id) => {\r\n  !state.animating.includes(id) && state.animating.push(id)\r\n}\r\n\r\nexport const stopAnimating: Action<string> = ({ state }, id) => {\r\n  const index = state.animating.indexOf(id)\r\n  if (index > -1) {\r\n    state.animating.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport const stopDragging: Action<string> = ({ state }, id) => {\r\n  const index = state.dragged.indexOf(id)\r\n  if (index > -1) {\r\n    state.dragged.splice(index, 1)\r\n  }\r\n}\r\n\r\ntype SetDataProps = {\r\n  data: Item[]\r\n  type: string\r\n}\r\n\r\nexport const setData: Action<SetDataProps> = ({ state }, { data, type }) => {\r\n  if (state.type === type) {\r\n    return\r\n  }\r\n\r\n  state.items = data.reduce((acc, cur) => {\r\n    if (cur.isFirst) {\r\n      state.active = [cur.id]\r\n      acc[cur.id] = { ...cur, active: true }\r\n    } else {\r\n      acc[cur.id] = { ...cur, active: false }\r\n    }\r\n    return acc\r\n  }, {} as Record<string, StateItem>)\r\n\r\n  state.tree = getTree(data)\r\n\r\n  state.type = type\r\n\r\n  state.animating = []\r\n  state.dragged = []\r\n}\r\n\r\nexport const setActive: Action<string> = ({ state }, id) => {\r\n  if (state.active[state.active.length - 1] === id) {\r\n    return\r\n  }\r\n\r\n  // 1. Id is inside active\r\n  if (state.active.includes(id)) {\r\n    let check = true\r\n    const newActive: string[] = []\r\n\r\n    // iterate over all currently active items\r\n    state.active.forEach((activeId) => {\r\n      // Set `active` field of iterated item as `true` if code didnt reach clicked item\r\n      // and as `false` if reached\r\n      state.items[activeId].active !== check &&\r\n        (state.items[activeId].active = check)\r\n\r\n      // If item is active, then push its id to new active array\r\n      check && newActive.push(activeId)\r\n\r\n      // if `true`, then set `active` field for all next items as `false`\r\n      if (activeId === id) {\r\n        check = false\r\n      }\r\n    })\r\n\r\n    state.active = newActive\r\n    return\r\n  }\r\n\r\n  // 2. Id is direct ascendand, climb from clicked item\r\n  {\r\n    // Select clicked item\r\n    let selected = state.items[id]\r\n    // Convert items to array\r\n    const items = Object.values(state.items)\r\n    // Find parents of clicked item\r\n    let parents = items.filter((item) => item.children.includes(selected.id))\r\n    // Add clicked item to new active array\r\n    let newActive: string[] = [id]\r\n\r\n    // Check if any parent is in active array\r\n    let complete = parents.some((parent) => {\r\n      const parentIsActive = state.active.includes(parent.id)\r\n      // If parent is in active array, then add ++++++ and set complete to true\r\n      if (parentIsActive) {\r\n        newActive.unshift(parent.id)\r\n        return true\r\n      }\r\n\r\n      return false\r\n    })\r\n\r\n    // Check for multiple parents\r\n    let forkCheck = parents.length === 1\r\n\r\n    // While selected has one parent and none of his parents is in active array\r\n    while (forkCheck && !complete) {\r\n      // Select parent (he is only one)\r\n      selected = state.items[parents[0].id]\r\n      // Unshift his id to array\r\n      newActive.unshift(selected.id)\r\n      // Find his parents\r\n      parents = items.filter((item) => item.children.includes(selected.id))\r\n\r\n      // Check if any parent is in active array\r\n      complete = parents.some((parent) => {\r\n        const parentIsActive = state.active.includes(parent.id)\r\n        if (parentIsActive) {\r\n          newActive.unshift(parent.id)\r\n          return true\r\n        }\r\n\r\n        return false\r\n      })\r\n\r\n      // Check for multiple parents\r\n      forkCheck = parents.length === 1\r\n    }\r\n\r\n    // If found parent that is in active array\r\n    if (complete) {\r\n      // Slice active array from start to parent and set others active to `false`\r\n      const indexOfParent = state.active.indexOf(newActive[0])\r\n      const oldActive = [...state.active.slice(0, indexOfParent)]\r\n\r\n      for (let i = indexOfParent + 1; i < state.active.length; i++) {\r\n        state.items[state.active[i]].active = false\r\n      }\r\n\r\n      // For new array set active to true\r\n      newActive.forEach((id) => {\r\n        state.items[id].active !== true && (state.items[id].active = true)\r\n      })\r\n\r\n      // Update active array\r\n      state.active = [...oldActive, ...newActive]\r\n      return\r\n    }\r\n\r\n    // 3. Try to descend from last active item to fork\r\n    // Last item in active array\r\n    const startId = state.active[state.active.length - 1]\r\n    let selectedDown = state.items[startId]\r\n    // Check for multiple children\r\n    let forkCheckDown = selectedDown.children.length === 1\r\n    // Creating increased array\r\n    const newActiveDown: string[] = [...state.active]\r\n\r\n    // Set check to false as we didnt reach startId from clicked item\r\n    let meeting = false\r\n\r\n    // While no meeting and only one child\r\n    while (forkCheckDown && !meeting) {\r\n      // Select child\r\n      selectedDown = state.items[selectedDown.children[0]]\r\n      // Push his id to new active array\r\n      newActiveDown.push(selectedDown.id)\r\n      // Check for his children amount (fork)\r\n      forkCheckDown = selectedDown.children.length === 1\r\n\r\n      // If newly selected item has selected id from prev case as his child\r\n      if (selectedDown.children.includes(selected.id)) {\r\n        // MEETING!\r\n        meeting = true\r\n      }\r\n    }\r\n\r\n    if (meeting) {\r\n      // Set top chain items as active\r\n      const indexOfParent = state.active.indexOf(startId)\r\n\r\n      for (let i = indexOfParent + 1; i < newActiveDown.length; i++) {\r\n        state.items[newActiveDown[i]].active = true\r\n      }\r\n\r\n      // Set bottom chain items as active\r\n      newActive.forEach((id) => (state.items[id].active = true))\r\n\r\n      // Update active array\r\n      state.active = [...newActiveDown, ...newActive]\r\n      return\r\n    }\r\n  }\r\n\r\n  return\r\n}\r\n","import { createOvermind, IConfig } from 'overmind'\r\nimport { createHook } from 'overmind-react'\r\n\r\nimport { state, Tree, Item } from './state'\r\nimport * as actions from './actions'\r\n\r\nexport type TreeModel = Tree\r\nexport type ItemModel = Item\r\n\r\nconst config = {\r\n  state,\r\n  actions,\r\n}\r\n\r\nexport const useOvermind = createHook<typeof config>()\r\n\r\nexport const overmind = createOvermind(config, { devtools: true })\r\n\r\ndeclare module 'overmind' {\r\n  interface Config extends IConfig<typeof config> {}\r\n}\r\n","import React, { memo, useState, useEffect, useRef } from 'react'\r\n\r\nimport { useOvermind } from '../../overmind'\r\n\r\nconst fix = (num: number) => num.toFixed(3)\r\n\r\nconst getSecondaryCoord = (start: number, end: number) => end - start\r\n\r\nconst getFieldPosition = (\r\n  field: string,\r\n  parent?: boolean\r\n): { x: number; y: number } => {\r\n  const element = document.getElementById(`${field}`)\r\n\r\n  if (!element) {\r\n    return { x: 0, y: 0 }\r\n  }\r\n\r\n  const rect = element.getBoundingClientRect()\r\n\r\n  const o1 = {\r\n    y: parent ? rect.bottom : rect.top,\r\n    x: rect.left + rect.width / 2,\r\n  }\r\n\r\n  return o1\r\n}\r\n\r\nconst getPath = (from: string, to: string, ofx: number, ofy: number) => {\r\n  const f1 = getFieldPosition(from, true)\r\n  const f2 = getFieldPosition(to)\r\n\r\n  const x1 = f1.x + ofx\r\n  const y1 = f1.y + ofy\r\n  const x4 = f2.x + ofx\r\n  const y4 = f2.y + ofy\r\n\r\n  if (x1 < 0 || x4 < 0) {\r\n    return ''\r\n  }\r\n\r\n  const diffx = getSecondaryCoord(x1, x4)\r\n\r\n  const x2 = x1 + diffx * 0.5\r\n  const y2 = y1 + 3\r\n  const x3 = x4 - diffx * 0.5\r\n  const y3 = y4 - 3\r\n  const arr1 = [fix(x1), fix(y1)].join(', ')\r\n  const arr2 = [x2, y2, x3, y3, fix(x4), fix(y3)].join(', ')\r\n\r\n  return `M${arr1}, V${fix(y2)}, C${arr2}, V${fix(y4)}`\r\n}\r\n\r\ninterface ConnectionProps {\r\n  from: string\r\n  to: string\r\n  wrapper: React.RefObject<SVGSVGElement>\r\n  dragged?: boolean\r\n\r\n  force: number\r\n}\r\n\r\nexport const Connection = memo((props: ConnectionProps) => {\r\n  const { from, to, wrapper, dragged, force } = props\r\n  const [path, setPath] = useState('')\r\n\r\n  const loopRef = useRef(0)\r\n\r\n  useEffect(() => {\r\n    if (!wrapper.current) {\r\n      return setPath('')\r\n    }\r\n\r\n    const offset = wrapper.current.getBoundingClientRect()\r\n\r\n    const ofx = wrapper.current.scrollLeft - offset.left\r\n\r\n    const ofy = wrapper.current.scrollTop - offset.top\r\n\r\n    setPath(getPath(from, to, ofx, ofy))\r\n\r\n    if (dragged) {\r\n      const loop = () => {\r\n        if (wrapper.current) {\r\n          const offset = wrapper.current.getBoundingClientRect()\r\n\r\n          const ofx = wrapper.current.scrollLeft - offset.left\r\n\r\n          const ofy = wrapper.current.scrollTop - offset.top\r\n\r\n          setPath(getPath(from, to, ofx, ofy))\r\n        }\r\n\r\n        loopRef.current = window.requestAnimationFrame(loop)\r\n      }\r\n\r\n      loopRef.current = window.requestAnimationFrame(loop)\r\n    } else {\r\n      window.cancelAnimationFrame(loopRef.current)\r\n      loopRef.current = 0\r\n    }\r\n  }, [from, to, dragged, wrapper, force])\r\n\r\n  return (\r\n    <path\r\n      fill='none'\r\n      strokeWidth='3'\r\n      strokeLinecap='round'\r\n      stroke='black'\r\n      d={path}\r\n    />\r\n  )\r\n})\r\n\r\nexport const Connections = memo(() => {\r\n  const [force, setForce] = useState(0)\r\n\r\n  const {\r\n    state: { items, dragged, isAnimating },\r\n  } = useOvermind()\r\n\r\n  const ref = useRef<SVGSVGElement>(null)\r\n\r\n  useEffect(() => {\r\n    setForce(1)\r\n    const handler = () => setForce((prev) => prev + 1)\r\n\r\n    window.addEventListener('resize', handler)\r\n    return () => window.removeEventListener('resize', handler)\r\n  }, [])\r\n\r\n  const renderConnections = () =>\r\n    Object.values(items).map((item) =>\r\n      item.children.map((child) => (\r\n        <Connection\r\n          key={child}\r\n          from={item.id}\r\n          to={child}\r\n          wrapper={ref}\r\n          force={force}\r\n          dragged={\r\n            isAnimating || dragged.includes(item.id) || dragged.includes(child)\r\n          }\r\n        />\r\n      ))\r\n    )\r\n\r\n  return (\r\n    <svg\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'none',\r\n        zIndex: -1,\r\n      }}\r\n      ref={ref}\r\n    >\r\n      {renderConnections()}\r\n    </svg>\r\n  )\r\n})\r\n","import createStyles from '@material-ui/core/styles/createStyles'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\r\n\r\nexport default makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    wrapper: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      userSelect: 'none',\r\n      background: 'antiquewhite',\r\n      maxHeight: 'calc(100vh - 60px)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      overflow: 'auto',\r\n      border: '1px solid rgba(200, 50, 100)',\r\n      borderRadius: 10,\r\n    },\r\n    active: {},\r\n    button: {\r\n      padding: '1px 10px',\r\n      marginTop: 5,\r\n      fontSize: 12,\r\n      background: 'teal',\r\n      userSelect: 'none',\r\n    },\r\n  })\r\n)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { useDrag } from 'react-use-gesture'\r\nimport useMeasure from 'react-use-measure'\r\n\r\nimport { useOvermind } from '../../overmind'\r\n\r\nimport useStyles from './Info.styles'\r\n\r\nconst trans = (x: number, y: number) => `translate3d(${x}px, ${y}px, 0)`\r\n\r\nexport const Info = () => {\r\n  const {\r\n    state: { active, items },\r\n  } = useOvermind()\r\n\r\n  const classes = useStyles()\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const [ref, { height: baseHeight }] = useMeasure()\r\n  const [wrapperRef, { height: fullHeight, width: fullWidth }] = useMeasure()\r\n\r\n  const [{ height }, setH] = useSpring(() => ({\r\n    height: 0,\r\n    config: {\r\n      tension: 200,\r\n      clamp: true,\r\n    },\r\n  }))\r\n\r\n  useEffect(() => {\r\n    setH({ height: isOpen ? baseHeight : 0 })\r\n  }, [isOpen, setH, baseHeight])\r\n\r\n  const toggle = () => setIsOpen((prev) => !prev)\r\n\r\n  const [{ xy }, set] = useSpring(() => ({\r\n    xy: [30, 30] as [number, number],\r\n  }))\r\n\r\n  const bind = useDrag(\r\n    ({ offset: [mx, my] }) => {\r\n      set({ xy: [mx, my] })\r\n    },\r\n    {\r\n      filterTaps: true,\r\n      bounds: {\r\n        left: 30,\r\n        top: 30,\r\n        right: window.innerWidth - fullWidth - 30,\r\n        bottom: window.innerHeight - fullHeight - 30,\r\n      },\r\n      rubberband: 0.2,\r\n    }\r\n  )\r\n\r\n  return (\r\n    <animated.div\r\n      className={classes.wrapper}\r\n      style={{ transform: xy.interpolate(trans as any) }}\r\n      ref={wrapperRef}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          padding: 20,\r\n          flexShrink: 0,\r\n        }}\r\n      >\r\n        Info\r\n        <div className={classes.button} {...bind()}>\r\n          drag\r\n        </div>\r\n        <div className={classes.button} onClick={toggle}>\r\n          expand\r\n        </div>\r\n      </div>\r\n      <animated.div style={{ height, overflow: 'hidden', flexShrink: 0 }}>\r\n        <ul ref={ref} style={{ padding: 10, margin: 0 }}>\r\n          {active.map((item) => (\r\n            <li key={items[item].id}>{items[item].id}</li>\r\n          ))}\r\n        </ul>\r\n      </animated.div>\r\n    </animated.div>\r\n  )\r\n}\r\n","import createStyles from '@material-ui/core/styles/createStyles'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\r\n\r\nexport default makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    active: {},\r\n    leaf: {\r\n      height: 100,\r\n      width: 200,\r\n      margin: `20px auto`,\r\n      display: 'grid',\r\n      placeItems: 'center',\r\n      color: 'white',\r\n      position: 'relative',\r\n\r\n      background: 'black',\r\n      transition: 'background 0.3s ease',\r\n      '&$active': {\r\n        background: 'darkblue',\r\n      },\r\n    },\r\n    leafWrapper: {\r\n      position: 'relative',\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-evenly',\r\n      textAlign: 'center',\r\n    },\r\n    top: {},\r\n    bottom: {},\r\n    connector: {\r\n      left: '50%',\r\n      position: 'absolute',\r\n      '&$top': {\r\n        top: 0,\r\n      },\r\n      '&$bottom': {\r\n        bottom: 0,\r\n      },\r\n    },\r\n    button: {\r\n      padding: '1px 10px',\r\n      marginTop: 5,\r\n      fontSize: 12,\r\n      background: 'teal',\r\n      userSelect: 'none',\r\n    },\r\n  })\r\n)\r\n","import clsx from 'clsx'\r\nimport React, { memo } from 'react'\r\n\r\nimport { useOvermind } from '../../overmind'\r\n\r\nimport useStyles from './Item.styles'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\n\r\nexport const TestItem = memo(({ id }: Props) => {\r\n  const classes = useStyles()\r\n\r\n  const { state, actions } = useOvermind()\r\n\r\n  const item = state.items[id]\r\n\r\n  const { children, isFirst, active } = item\r\n\r\n  const onClick = () => actions.setActive(id)\r\n\r\n  const className = clsx(classes.leaf, active && classes.active)\r\n\r\n  const renderTop = () => (\r\n    <span id={`${id}-top`} className={clsx(classes.connector, classes.top)} />\r\n  )\r\n\r\n  const renderBottom = () => (\r\n    <span\r\n      id={`${id}-bottom`}\r\n      className={clsx(classes.connector, classes.bottom)}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <div className={classes.leafWrapper}>\r\n      <div className={className} id={id} onClick={onClick}>\r\n        {!isFirst && renderTop()}\r\n        {id}\r\n        {children.length > 0 && renderBottom()}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { useDrag } from 'react-use-gesture'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport useMeasure from 'react-use-measure'\r\n\r\nimport { useOvermind } from '../../overmind'\r\nimport { IHoi4Item } from '../../overmind/state'\r\n\r\nimport useStyles from './Item.styles'\r\n\r\nconst trans = (x: number, y: number) => `translate3d(${x}px, ${y}px, 0)`\r\n\r\nexport const Hoi4Item = ({ id }: { id: string }) => {\r\n  const classes = useStyles()\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const { state, actions } = useOvermind()\r\n\r\n  const item = state.items[id]\r\n\r\n  const { active, description, title } = item as IHoi4Item\r\n\r\n  const [ref, { height: baseHeight }] = useMeasure()\r\n\r\n  const onClick = () => actions.setActive(id)\r\n\r\n  const className = clsx(classes.leaf, active && classes.active)\r\n\r\n  const isDragging = useRef(false)\r\n\r\n  const [{ height }, setH] = useSpring(() => ({\r\n    height: 0,\r\n    config: {\r\n      tension: 200,\r\n      clamp: true,\r\n    },\r\n    onRest: () => {\r\n      actions.stopAnimating(id)\r\n    },\r\n  }))\r\n\r\n  useEffect(() => {\r\n    setH({ height: isOpen ? baseHeight : 0 })\r\n  }, [isOpen, setH, baseHeight])\r\n\r\n  const toggle = () => {\r\n    setIsOpen((prev) => !prev)\r\n    actions.setAnimating(id)\r\n  }\r\n\r\n  const [{ xy }, set] = useSpring(() => ({\r\n    xy: [0, 0] as [number, number],\r\n    onRest: () => {\r\n      !isDragging.current && actions.stopDragging(id)\r\n    },\r\n  }))\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      actions.stopDragging(id)\r\n      actions.stopAnimating(id)\r\n    }\r\n  }, [actions, id])\r\n\r\n  const bind = useDrag(\r\n    ({ down, movement: [mx, my], first }) => {\r\n      if (first) {\r\n        actions.setDragged(id)\r\n      }\r\n\r\n      isDragging.current = down\r\n      set({ xy: down ? [mx, my] : [0, 0] })\r\n    },\r\n    { filterTaps: true }\r\n  )\r\n\r\n  return (\r\n    <div className={classes.leafWrapper}>\r\n      <animated.div\r\n        className={className}\r\n        id={id}\r\n        style={{\r\n          transform: xy.interpolate(trans as any),\r\n          height: 'auto',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: 150,\r\n          }}\r\n        >\r\n          {title}\r\n          <div className={classes.button} {...bind()}>\r\n            drag\r\n          </div>\r\n          <div className={classes.button} onClick={onClick}>\r\n            active\r\n          </div>\r\n          <div className={classes.button} onClick={toggle}>\r\n            expand\r\n          </div>\r\n        </div>\r\n        <animated.div style={{ height, overflow: 'hidden' }}>\r\n          <div ref={ref} style={{ padding: 10 }}>\r\n            {description}\r\n          </div>\r\n        </animated.div>\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { memo } from 'react'\r\n\r\nimport { useOvermind } from '../../overmind'\r\n\r\nimport { TestItem } from './TestItem'\r\nimport { Hoi4Item } from './Hoi4Item'\r\n\r\nexport const ItemMapper = memo(({ id }: { id: string }) => {\r\n  const { state } = useOvermind()\r\n\r\n  const { type } = state.items[id]\r\n\r\n  switch (type) {\r\n    case 'hoi4':\r\n      return <Hoi4Item id={id} />\r\n    default:\r\n      return <TestItem id={id} />\r\n  }\r\n})\r\n","import createStyles from '@material-ui/core/styles/createStyles'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\r\n\r\nexport default makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    wrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minWidth: 'max-content',\r\n      position: 'relative',\r\n    },\r\n    table: {},\r\n    row: {\r\n      display: 'grid',\r\n      position: 'relative',\r\n    },\r\n    subtree: {\r\n      display: 'grid',\r\n      gridColumnGap: 22,\r\n      placeItems: 'center',\r\n      position: 'relative',\r\n    },\r\n  })\r\n)\r\n","import React, { memo } from 'react'\r\n\r\nimport { TreeModel, useOvermind } from '../../overmind'\r\nimport { Connections } from '../Connections/Connections'\r\nimport { Info } from '../Info/Info'\r\n\r\nimport { ItemMapper } from './ItemMapper'\r\nimport useStyles from './List.styles'\r\n\r\nexport const List = memo(() => {\r\n  const {\r\n    state: { tree },\r\n  } = useOvermind()\r\n\r\n  console.count('list')\r\n\r\n  const classes = useStyles()\r\n\r\n  const renderTree = (tree: TreeModel): JSX.Element => {\r\n    if (Array.isArray(tree)) {\r\n      return (\r\n        <div\r\n          key='array'\r\n          className={classes.subtree}\r\n          style={{ gridTemplateColumns: `repeat(${tree.length}, 1fr)` }}\r\n        >\r\n          {tree.map(renderTree)}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return <ItemMapper id={tree.id} key={tree.id} />\r\n  }\r\n\r\n  const renderItems = () => (\r\n    <div className={classes.table}>\r\n      {tree.map((leaf, index) => (\r\n        <div key={index} className={classes.row}>\r\n          {renderTree(leaf)}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {renderItems()}\r\n      <Connections />\r\n      <Info />\r\n    </div>\r\n  )\r\n})\r\n","import createStyles from '@material-ui/core/styles/createStyles'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\r\n\r\nexport default makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    wrapper: {\r\n      top: 0,\r\n    },\r\n  })\r\n)\r\n","import { ITestItem } from '../../overmind/state'\r\n\r\nexport const testData1: ITestItem[] = [\r\n  { id: '1', children: ['2a', '2b'], isFirst: true },\r\n  { id: '2a', children: ['3a'] },\r\n  { id: '2b', children: ['3ba', '3bb'] },\r\n\r\n  { id: '3a', children: ['4aa', '4ab'] },\r\n  { id: '3ba', children: ['4b'] },\r\n  { id: '3bb', children: ['4b'] },\r\n\r\n  { id: '4aa', children: ['5aa'] },\r\n  { id: '4ab', children: ['5ab'] },\r\n  { id: '4b', children: ['5b'] },\r\n\r\n  { id: '5aa', children: ['6'] },\r\n  { id: '5ab', children: ['6'] },\r\n  { id: '5b', children: ['6'] },\r\n\r\n  { id: '6', children: ['7a', '7b', '7c'] },\r\n\r\n  { id: '7a', children: ['8'] },\r\n  { id: '7b', children: ['8'] },\r\n  { id: '7c', children: ['8'] },\r\n\r\n  { id: '8', children: ['9a', '9b', '9c'] },\r\n\r\n  { id: '9a', children: ['10'] },\r\n  { id: '9b', children: [] },\r\n  { id: '9c', children: [] },\r\n\r\n  { id: '10', children: [] },\r\n]\r\n\r\nexport const testData2: ITestItem[] = [\r\n  { id: '1', children: ['2a', '2b'], isFirst: true },\r\n  { id: '2a', children: ['3a'] },\r\n  { id: '2b', children: ['3ba', '3bb'] },\r\n\r\n  { id: '3a', children: ['4aa', '4ab'] },\r\n  { id: '3ba', children: ['4b'] },\r\n  { id: '3bb', children: ['4b'] },\r\n\r\n  { id: '4aa', children: ['5aa'] },\r\n  { id: '4ab', children: ['5ab'] },\r\n  { id: '4b', children: ['5b'] },\r\n\r\n  { id: '5aa', children: ['6'] },\r\n  { id: '5ab', children: ['6'] },\r\n  { id: '5b', children: ['6'] },\r\n\r\n  { id: '6', children: [] },\r\n]\r\n","import { IHoi4Item } from '../../overmind/state'\r\n\r\nexport const mobileWarfare: IHoi4Item[] = [\r\n  {\r\n    type: 'hoi4',\r\n    id: '1',\r\n    children: ['2'],\r\n    isFirst: true,\r\n    title: `Mobile Warfare`,\r\n    description: `Mobile Warfare is a focus on speed and maneuver to cut off and disorganize enemy forces.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '2',\r\n    children: ['3'],\r\n    title: `Delay`,\r\n    description: `Even when a battle cannot be won, it can be advantageous to slow the progress of attacking forces with ambushes and delaying tactics.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '3',\r\n    children: ['4a', '4b'],\r\n    title: `Elastic Defense`,\r\n    description: `Rather than focusing all strength on the front line, an elastic defense creates a 'deeper' layer of defenses which allows the defender more time to react and counter-attack while the attacker is spread out and bogged down.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '4a',\r\n    children: ['5a'],\r\n    title: `Mobile Infantry`,\r\n    description: `Regular Infantry is often too slow to keep up with, react to, or escape from rapidly moving Armored forces. The answer is to focus on Motorized or Mechanized Infantry which can keep up with the pace of modern warfare.`,\r\n  },\r\n  {\r\n    type: 'hoi4',\r\n    id: '4b',\r\n    children: ['5b'],\r\n    title: `Armored Spearhead`,\r\n    description: `To use Tanks to their fullest potential they cannot be tied down supporting Infantry. Instead they must be formed into fast moving, independent units which can spearhead attacks.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '5a',\r\n    children: ['6a'],\r\n    title: `Mass Motorization`,\r\n    description: `An even greater focus on Motorized troops.`,\r\n  },\r\n  {\r\n    type: 'hoi4',\r\n    id: '5b',\r\n    children: ['6b'],\r\n    title: `Schwerpunkt`,\r\n    description: `In any operation the Schwerpunkt, or Focal point, must be identified and maximum force concentrated to win at that point`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '6a',\r\n    children: ['7'],\r\n    title: `Mechanized Offensive`,\r\n    description: `Motorized troops are well and good, but to lead offensives we need Infantry that can ride into battle in armored transports which protect them and carry heavy weapons`,\r\n  },\r\n  {\r\n    type: 'hoi4',\r\n    id: '6b',\r\n    children: ['7'],\r\n    title: `Blitzkrieg`,\r\n    description: `Blitzkrieg refers to the strategy of fast moving Armored forces supported by Mobile Infantry and air support breaking through enemy lines to disorganize and encircle them.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '7',\r\n    children: ['8a', '8b'],\r\n    title: `Kampfgruppe`,\r\n    description: `A Kampfgruppe was an ad hoc formation which was organized to carry out a specific task.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '8a',\r\n    children: ['9a'],\r\n    title: `Volkssturm`,\r\n    description: `The Volkssturm, or People's Militia, consisted of men who were too old, too young, or otherwise unfit for regular military service.`,\r\n  },\r\n  {\r\n    type: 'hoi4',\r\n    id: '8b',\r\n    children: ['9b'],\r\n    title: `Fire brigades`,\r\n    description: `'Fire brigades' were hastily scrambled forces thrown together to react to enemy breakthroughs or other critical issues.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '9a',\r\n    children: ['10a'],\r\n    title: `Non-Discriminatory Conscription`,\r\n    description: `Even invalids and cripples must be drafted, there can be no such thing as a civilian.`,\r\n  },\r\n  {\r\n    type: 'hoi4',\r\n    id: '9b',\r\n    children: ['10b'],\r\n    title: `Backhand Blow`,\r\n    description: `Rather than fighting for every inch of ground, enemy penetrations are largely avoided until they have extended themselves, at which point they can be cut off and destroyed by counterattacks.`,\r\n  },\r\n\r\n  {\r\n    type: 'hoi4',\r\n    id: '10a',\r\n    children: [],\r\n    title: `Werwolf Guerrillas`,\r\n    description: `The Werwolves were a planned German resistance group that would fight on against the occupying powers when the war was lost.`,\r\n  },\r\n  {\r\n    type: 'hoi4',\r\n    id: '10b',\r\n    children: [],\r\n    title: `Modern Blitzkrieg`,\r\n    description: `The pinnacle of Mobile Warfare, Modern Blitzkrieg incorporates all the latest advances of technology and the lessons learned from previous doctrines.`,\r\n  },\r\n]\r\n","import React, { memo, useEffect } from 'react'\r\n\r\nimport { useOvermind } from '../../overmind'\r\n\r\nimport useStyles from './DataSelector.styles'\r\nimport { testData1, testData2 } from './test-data'\r\nimport { mobileWarfare } from './hoi4-data'\r\n\r\nexport const DataSelector = memo(() => {\r\n  const { actions } = useOvermind()\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    actions.setData({ data: mobileWarfare, type: 'Mobile Warfare' })\r\n  }, [actions])\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <button\r\n        onClick={() =>\r\n          actions.setData({ data: mobileWarfare, type: 'Mobile Warfare' })\r\n        }\r\n      >\r\n        Mobile Warfare\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => actions.setData({ data: testData1, type: 'test1' })}\r\n      >\r\n        Test items 1\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => actions.setData({ data: testData2, type: 'test2' })}\r\n      >\r\n        Test items 2\r\n      </button>\r\n    </div>\r\n  )\r\n})\r\n","import React from 'react'\nimport { Provider } from 'overmind-react'\n\nimport { List } from './components/List/List'\nimport { overmind } from './overmind'\nimport { DataSelector } from './components/DataSelector/DataSelector'\n\nconst App = () => (\n  <Provider value={overmind}>\n    <DataSelector />\n    <List />\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}